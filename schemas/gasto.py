# üìö Bibliotecas
from pydantic import BaseModel, Field, validator
from typing import ClassVar


# ‚úÖ Modelo de dados com valida√ß√µes

class Gasto(BaseModel):
    descricao: str = Field(..., min_length=3, example="Supermercado")
    valor: float = Field(..., gt=0, example=150.75)
    categoria: str = Field(..., min_length=3, example="Alimenta√ß√£o")

    CATEGORIAS_PERMITIDAS: ClassVar[set] = {
        "Alimenta√ß√£o", "Transporte", "Educa√ß√£o", "Lazer", "Sa√∫de", "Moradia", "Outros"
    }

    @validator('descricao', 'categoria')
    def no_whitespace(cls, v):
        if not v.strip():
            raise ValueError("Campo n√£o pode ser vazio ou s√≥ espa√ßos")
        return v

    @validator('categoria')
    def categoria_valida(cls, v):
        valor_formatado = v.strip().title()
        if valor_formatado not in cls.CATEGORIAS_PERMITIDAS:
            raise ValueError(f"Categoria inv√°lida. Use uma das: {', '.join(cls.CATEGORIAS_PERMITIDAS)}")
        return valor_formatado

